<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://ChenHaoHere.github.io</id>
    <title>Blabla</title>
    <updated>2020-10-13T05:50:48.785Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://ChenHaoHere.github.io"/>
    <link rel="self" href="https://ChenHaoHere.github.io/atom.xml"/>
    <subtitle>我的Blog</subtitle>
    <logo>https://ChenHaoHere.github.io/images/avatar.png</logo>
    <icon>https://ChenHaoHere.github.io/favicon.ico</icon>
    <rights>All rights reserved 2020, Blabla</rights>
    <entry>
        <title type="html"><![CDATA[MR第一周组会：Modular Robot（2020~）]]></title>
        <id>https://ChenHaoHere.github.io/post/modular-robot2020~/</id>
        <link href="https://ChenHaoHere.github.io/post/modular-robot2020~/">
        </link>
        <updated>2020-10-13T05:47:26.000Z</updated>
        <content type="html"><![CDATA[<ol>
<li><a href="https://www.sciencedirect.com/science/article/pii/S0921889019303379">Roombots extended: Challenges in the next generation of self-reconfigurable modular robots and their application in adaptive and assistive furniture</a></li>
</ol>
<p>家具的辅助场景</p>
<p>一开始有关于MR的survey性质的介绍，然后是他自己的家具应用的特定场景 完成的工作是人为遥控的</p>
<ol start="2">
<li><a href="https://www.emerald.com/insight/content/doi/10.1108/WJE-02-2019-0032/full/html">Quantum genetic algorithm to evolve controllers for self-reconfigurable modular robots</a></li>
</ol>
<p>量子遗传算法</p>
<ol start="3">
<li><a href="https://ieeexplore.ieee.org/abstract/document/9158382">Kubits: Solid-State Self-Reconfiguration With Programmable Magnets</a></li>
</ol>
<p>可编程磁体，能达到1000个模块</p>
<ol start="4">
<li><a href="https://link.springer.com/chapter/10.1007/978-3-030-28619-4_65">Configuration Recognition with Distributed Information for Modular Robots</a></li>
</ol>
<p>很多个模块自动变形、配置的算法 新的MR表示法和多项式时间复杂度下解决匹配和映射</p>
<p>This paper presents a new representation of modular robot configurations and a polynomial time algorithm for configuration recognition which can finish matching and mapping problem simultaneously.</p>
<ol start="5">
<li><a href="https://www.frontiersin.org/articles/10.3389/frobt.2020.00044/full?&amp;utm_source=Email_to_authors_&amp;utm_medium=Email&amp;utm_content=T1_11.5e1_author&amp;utm_campaign=Email_publication&amp;field=&amp;journalName=Frontiers_in_Robotics_and_AI&amp;id=511523">Scalable and Robust Fabrication, Operation, and Control of Compliant Modular Robots</a></li>
</ol>
<p>硬件设计 二维的 用不上 但是其中思想也许可以借鉴</p>
<p>很轻</p>
<ol start="6">
<li><a href="https://arxiv.org/pdf/2006.11071.pdf">Distributed prediction of unsafe reconfiguration scenarios of modular-robotic Programmable Matter</a></li>
</ol>
<p>重构时稳不稳</p>
<ol start="7">
<li><a href="http://bluebox.ippt.pan.pl/~jleng/doc/iros20subm.pdf">Autonomous model-based assessment of mechanical failures of reconfigurable modular robots with a Conjugate Gradient solver</a></li>
</ol>
<p>故障检测算法</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[python获得所有包]]></title>
        <id>https://ChenHaoHere.github.io/post/python-huo-de-suo-you-bao/</id>
        <link href="https://ChenHaoHere.github.io/post/python-huo-de-suo-you-bao/">
        </link>
        <updated>2020-08-12T03:30:00.000Z</updated>
        <content type="html"><![CDATA[<pre><code class="language-python">help('modules')
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[tensorflow画networks的图]]></title>
        <id>https://ChenHaoHere.github.io/post/tensorflow-hua-networks-de-tu/</id>
        <link href="https://ChenHaoHere.github.io/post/tensorflow-hua-networks-de-tu/">
        </link>
        <updated>2020-05-13T08:44:42.000Z</updated>
        <content type="html"><![CDATA[<pre><code class="language-python">tf.keras.utils.plot_model(model, 'my_model.png', show_shapes=True)
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[tensorflow custom RNN]]></title>
        <id>https://ChenHaoHere.github.io/post/tensorflow-coustom-rnn/</id>
        <link href="https://ChenHaoHere.github.io/post/tensorflow-coustom-rnn/">
        </link>
        <updated>2020-05-13T05:57:19.000Z</updated>
        <content type="html"><![CDATA[<blockquote>
<p>model.fit()是非常强大的工具，但是自己自定义网络的时候就没法用，但其实tf.keras提供了很好的<strong>tf.keras.layers.layer</strong>和<strong>tf.keras.models.Model</strong>使用，通过继承子类的方式也能用上fit</p>
<p><strong>但是</strong>，RNN不能这么用，因为RNN还有hiddenstate要搞，直接这么用，会报各种错，反正我吃了血亏了...</p>
<p>tf.keras提供了RNNCell（我用的keras.layers.AbstractRNNCell，还有GRUcell，LSTMcell，都可以用）来继承编写</p>
</blockquote>
<h2 id="代码奉上">代码奉上</h2>
<pre><code class="language-python">class myGRU(keras.layers.AbstractRNNCell):
    def __init__(self, units, **kwargs):
        self.units = units
        super(myGRU, self).__init__(**kwargs)

    @property
    def state_size(self):
        return self.units

    def build(self, input_shape):
        self.dim = input_shape[-1]

        self.w_r = self.add_weight(shape=[self.dim+self.units, self.units], initializer='uniform', name='reset_gate', trainable=True)
        self.b_r = self.add_weight(shape=[self.units], initializer='zeros', name='reset gate bias', trainable=True)

        self.w_z = self.add_weight(shape=[self.dim+self.units, self.units], initializer='uniform', name='update_gate', trainable=True)
        self.b_z = self.add_weight(shape=[self.units], initializer='zeros', name='update gate bias', trainable=True) 

        self.w_n = self.add_weight(shape=[self.dim+self.units, self.units], initializer='uniform', name='intetim', trainable=True)
        self.b_n = self.add_weight(shape=[self.units], initializer='zeros', name='intetim gate bias', trainable=True)

        self.built = True

    def call(self, inputs, states):
        prev_output = states[0]

        r = tf.nn.sigmoid(inputs @ self.w_r[:self.dim] + prev_output @ self.w_r[self.dim:] + self.b_r)
        z = tf.nn.sigmoid(inputs @ self.w_z[:self.dim] + prev_output @ self.w_z[self.dim:] + self.b_z)
        n = tf.nn.tanh(inputs @ self.w_r[:self.dim] + prev_output @ (r * self.w_r[self.dim:]) + self.b_n)
        
        output = (1 - z) * prev_output + z * n

        return output, output

class GRUReg(keras.models.Model):
    def __init__(self, units, **kwargs):
        super(GRUReg, self).__init__(**kwargs)
        self.gru = keras.layers.RNN(myGRU(units))
        self.dense = keras.layers.Dense(1)
    
    def call(self, inputs):
        x = self.gru(inputs)
        x = self.dense(x)
        return x
model = GRUReg(32)
model.compile(optimizer=keras.optimizers.RMSprop(), loss='mae', metrics=['mae'])
model.fit(tf.ones((3, 128, 2)), tf.zeros(3), epochs=5, batch_size=1)
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[numpy 0-d数组怎么索引]]></title>
        <id>https://ChenHaoHere.github.io/post/numpy-0-d-shu-zu-zen-me-suo-yin/</id>
        <link href="https://ChenHaoHere.github.io/post/numpy-0-d-shu-zu-zen-me-suo-yin/">
        </link>
        <updated>2020-04-30T14:17:45.000Z</updated>
        <content type="html"><![CDATA[<blockquote>
<p>numpy 保存多个数组到一个文件，如果想要辨识各个数组，自然而然想到保存成字典dict，但是读取时<br>
发现竟然变成了0-d数组，没法索引，还是万能的谷歌解决了我的问题</p>
</blockquote>
<p>先保存</p>
<pre><code class="language-python">np.save(r&quot;my_dict.npz&quot;, {'a':np.arange(2), 'b':np.arange(10)})
</code></pre>
<p>再读取</p>
<pre><code class="language-python">my_dict = np.load(&quot;my_dict.npz&quot;)
print(my_dict)
print(my_dict.dtype)#object
print(my_dict.shape)#()
</code></pre>
<p>索引</p>
<pre><code class="language-python">#method 1
x.item()

#method 2
x[()]
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[RuntimeError: reduce failed to synchronize: cudaErrorAssert: device-side assert triggered]]></title>
        <id>https://ChenHaoHere.github.io/post/runtimeerror-reduce-failed-to-synchronize-cudaerrorassert-device-side-assert-triggered/</id>
        <link href="https://ChenHaoHere.github.io/post/runtimeerror-reduce-failed-to-synchronize-cudaerrorassert-device-side-assert-triggered/">
        </link>
        <updated>2020-04-25T13:49:33.000Z</updated>
        <content type="html"><![CDATA[<p>pytorch报错</p>
<pre><code class="language-shell">RuntimeError: reduce failed to synchronize: cudaErrorAssert: device-side assert triggered
</code></pre>
<p>原因是bceloss的输入必须在[0.0,1.0]之间</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[VScode路径中有非法字符]]></title>
        <id>https://ChenHaoHere.github.io/post/vscode-lu-jing-zhong-you-fei-fa-zi-fu/</id>
        <link href="https://ChenHaoHere.github.io/post/vscode-lu-jing-zhong-you-fei-fa-zi-fu/">
        </link>
        <updated>2020-04-16T07:33:24.000Z</updated>
        <content type="html"><![CDATA[<p>配置了好久vs code的C/C++环境，f5运行报错说launch.json路径中有非法字符<br>
然后把这个解释器路径改成绝对路径就好了</p>
<pre><code class="language-shell">        &quot;MIMode&quot;: &quot;gdb&quot;,
        &quot;miDebuggerPath&quot;: &quot;D:/MinGW64/mingw64/bin/gdb.exe&quot;
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[BAZEL .sh安装卸载]]></title>
        <id>https://ChenHaoHere.github.io/post/bazel-sh-an-zhuang-xie-zai/</id>
        <link href="https://ChenHaoHere.github.io/post/bazel-sh-an-zhuang-xie-zai/">
        </link>
        <updated>2020-04-15T05:48:51.000Z</updated>
        <content type="html"><![CDATA[<p>（https://github.com/bazelbuild/bazel/issues/838）</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[码云 clone 时认证失败]]></title>
        <id>https://ChenHaoHere.github.io/post/ma-yun-clone-shi-ren-zheng-shi-bai/</id>
        <link href="https://ChenHaoHere.github.io/post/ma-yun-clone-shi-ren-zheng-shi-bai/">
        </link>
        <updated>2020-04-15T02:10:48.000Z</updated>
        <content type="html"><![CDATA[<p>直接从github git clone一些大项目的时候太太太太太慢了，国内有一个叫码云的代码托管网站，<strong>速度贼快</strong><br>
但是第一次git clone的时候用户名/密码验证失败了<br>
才发现这个网站自己设置的用户名是不能用来验证的（不知道为啥要有这个），clone的时候username改成自己注册时的邮箱账号就行了</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Win的ubuntu子系统调用本机磁盘文件]]></title>
        <id>https://ChenHaoHere.github.io/post/win-de-ubuntu-zi-xi-tong-diao-yong-ben-ji-ci-pan-wen-jian/</id>
        <link href="https://ChenHaoHere.github.io/post/win-de-ubuntu-zi-xi-tong-diao-yong-ben-ji-ci-pan-wen-jian/">
        </link>
        <updated>2020-04-13T01:32:03.000Z</updated>
        <content type="html"><![CDATA[<blockquote>
<p>所有的Windows文件都被挂载到 Linux的 /mnt/ 下面的盘符 ，如C盘对应的是 /mnt/c 。</p>
</blockquote>
<figure data-type="image" tabindex="1"><img src="https://raw.githubusercontent.com/ChenHaoHere/PicGo/master/20200413093404.png" alt="" loading="lazy"></figure>
]]></content>
    </entry>
</feed>