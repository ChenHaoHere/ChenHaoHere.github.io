<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://ChenHaoHere.github.io</id>
    <title>Blabla</title>
    <updated>2020-05-13T06:04:39.977Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://ChenHaoHere.github.io"/>
    <link rel="self" href="https://ChenHaoHere.github.io/atom.xml"/>
    <subtitle>我的Blog</subtitle>
    <logo>https://ChenHaoHere.github.io/images/avatar.png</logo>
    <icon>https://ChenHaoHere.github.io/favicon.ico</icon>
    <rights>All rights reserved 2020, Blabla</rights>
    <entry>
        <title type="html"><![CDATA[tensorflow coustom RNN]]></title>
        <id>https://ChenHaoHere.github.io/post/tensorflow-coustom-rnn/</id>
        <link href="https://ChenHaoHere.github.io/post/tensorflow-coustom-rnn/">
        </link>
        <updated>2020-05-13T05:57:19.000Z</updated>
        <content type="html"><![CDATA[<blockquote>
<p>model.fit()是非常强大的工具，但是自己自定义网络的时候就没法用，但其实tf.keras提供了很好的<strong>tf.keras.layers.layer</strong>和<strong>tf.keras.models.Model</strong>使用，通过继承子类的方式也能用上fit</p>
<p><strong>但是</strong>，RNN不能这么用，因为RNN还有hiddenstate要搞，直接这么用，会报各种错，反正我吃了血亏了...</p>
<p>tf.keras提供了RNNCell（我用的keras.layers.AbstractRNNCell，还有GRUcell，LSTMcell，都可以用）来继承编写</p>
</blockquote>
<h2 id="代码奉上">代码奉上</h2>
<pre><code class="language-python">class myGRU(keras.layers.AbstractRNNCell):
    def __init__(self, units, **kwargs):
        self.units = units
        super(myGRU, self).__init__(**kwargs)

    @property
    def state_size(self):
        return self.units

    def build(self, input_shape):
        self.dim = input_shape[-1]

        self.w_r = self.add_weight(shape=[self.dim+self.units, self.units], initializer='uniform', name='reset_gate', trainable=True)
        self.b_r = self.add_weight(shape=[self.units], initializer='zeros', name='reset gate bias', trainable=True)

        self.w_z = self.add_weight(shape=[self.dim+self.units, self.units], initializer='uniform', name='update_gate', trainable=True)
        self.b_z = self.add_weight(shape=[self.units], initializer='zeros', name='update gate bias', trainable=True) 

        self.w_n = self.add_weight(shape=[self.dim+self.units, self.units], initializer='uniform', name='intetim', trainable=True)
        self.b_n = self.add_weight(shape=[self.units], initializer='zeros', name='intetim gate bias', trainable=True)

        self.built = True

    def call(self, inputs, states):
        prev_output = states[0]

        r = tf.nn.sigmoid(inputs @ self.w_r[:self.dim] + prev_output @ self.w_r[self.dim:] + self.b_r)
        z = tf.nn.sigmoid(inputs @ self.w_z[:self.dim] + prev_output @ self.w_z[self.dim:] + self.b_z)
        n = tf.nn.tanh(inputs @ self.w_r[:self.dim] + prev_output @ (r * self.w_r[self.dim:]) + self.b_n)
        
        output = (1 - z) * prev_output + z * n

        return output, output

class GRUReg(keras.models.Model):
    def __init__(self, units, **kwargs):
        super(GRUReg, self).__init__(**kwargs)
        self.gru = keras.layers.RNN(myGRU(units))
        self.dense = keras.layers.Dense(1)
    
    def call(self, inputs):
        x = self.gru(inputs)
        x = self.dense(x)
        return x
model = GRUReg(32)
model.compile(optimizer=keras.optimizers.RMSprop(), loss='mae', metrics=['mae'])
model.fit(tf.ones((3, 128, 2)), tf.zeros(3), epochs=5, batch_size=1)
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[numpy 0-d数组怎么索引]]></title>
        <id>https://ChenHaoHere.github.io/post/numpy-0-d-shu-zu-zen-me-suo-yin/</id>
        <link href="https://ChenHaoHere.github.io/post/numpy-0-d-shu-zu-zen-me-suo-yin/">
        </link>
        <updated>2020-04-30T14:17:45.000Z</updated>
        <content type="html"><![CDATA[<blockquote>
<p>numpy 保存多个数组到一个文件，如果想要辨识各个数组，自然而然想到保存成字典dict，但是读取时<br>
发现竟然变成了0-d数组，没法索引，还是万能的谷歌解决了我的问题</p>
</blockquote>
<p>先保存</p>
<pre><code class="language-python">np.save(r&quot;my_dict.npz&quot;, {'a':np.arange(2), 'b':np.arange(10)})
</code></pre>
<p>再读取</p>
<pre><code class="language-python">my_dict = np.load(&quot;my_dict.npz&quot;)
print(my_dict)
print(my_dict.dtype)#object
print(my_dict.shape)#()
</code></pre>
<p>索引</p>
<pre><code class="language-python">#method 1
x.item()

#method 2
x[()]
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[RuntimeError: reduce failed to synchronize: cudaErrorAssert: device-side assert triggered]]></title>
        <id>https://ChenHaoHere.github.io/post/runtimeerror-reduce-failed-to-synchronize-cudaerrorassert-device-side-assert-triggered/</id>
        <link href="https://ChenHaoHere.github.io/post/runtimeerror-reduce-failed-to-synchronize-cudaerrorassert-device-side-assert-triggered/">
        </link>
        <updated>2020-04-25T13:49:33.000Z</updated>
        <content type="html"><![CDATA[<p>pytorch报错</p>
<pre><code class="language-shell">RuntimeError: reduce failed to synchronize: cudaErrorAssert: device-side assert triggered
</code></pre>
<p>原因是bceloss的输入必须在[0.0,1.0]之间</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[VScode路径中有非法字符]]></title>
        <id>https://ChenHaoHere.github.io/post/vscode-lu-jing-zhong-you-fei-fa-zi-fu/</id>
        <link href="https://ChenHaoHere.github.io/post/vscode-lu-jing-zhong-you-fei-fa-zi-fu/">
        </link>
        <updated>2020-04-16T07:33:24.000Z</updated>
        <content type="html"><![CDATA[<p>配置了好久vs code的C/C++环境，f5运行报错说launch.json路径中有非法字符<br>
然后把这个解释器路径改成绝对路径就好了</p>
<pre><code class="language-shell">        &quot;MIMode&quot;: &quot;gdb&quot;,
        &quot;miDebuggerPath&quot;: &quot;D:/MinGW64/mingw64/bin/gdb.exe&quot;
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[BAZEL .sh安装卸载]]></title>
        <id>https://ChenHaoHere.github.io/post/bazel-sh-an-zhuang-xie-zai/</id>
        <link href="https://ChenHaoHere.github.io/post/bazel-sh-an-zhuang-xie-zai/">
        </link>
        <updated>2020-04-15T05:48:51.000Z</updated>
        <content type="html"><![CDATA[<p>（https://github.com/bazelbuild/bazel/issues/838）</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[码云 clone 时认证失败]]></title>
        <id>https://ChenHaoHere.github.io/post/ma-yun-clone-shi-ren-zheng-shi-bai/</id>
        <link href="https://ChenHaoHere.github.io/post/ma-yun-clone-shi-ren-zheng-shi-bai/">
        </link>
        <updated>2020-04-15T02:10:48.000Z</updated>
        <content type="html"><![CDATA[<p>直接从github git clone一些大项目的时候太太太太太慢了，国内有一个叫码云的代码托管网站，<strong>速度贼快</strong><br>
但是第一次git clone的时候用户名/密码验证失败了<br>
才发现这个网站自己设置的用户名是不能用来验证的（不知道为啥要有这个），clone的时候username改成自己注册时的邮箱账号就行了</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Win的ubuntu子系统调用本机磁盘文件]]></title>
        <id>https://ChenHaoHere.github.io/post/win-de-ubuntu-zi-xi-tong-diao-yong-ben-ji-ci-pan-wen-jian/</id>
        <link href="https://ChenHaoHere.github.io/post/win-de-ubuntu-zi-xi-tong-diao-yong-ben-ji-ci-pan-wen-jian/">
        </link>
        <updated>2020-04-13T01:32:03.000Z</updated>
        <content type="html"><![CDATA[<blockquote>
<p>所有的Windows文件都被挂载到 Linux的 /mnt/ 下面的盘符 ，如C盘对应的是 /mnt/c 。</p>
</blockquote>
<figure data-type="image" tabindex="1"><img src="https://raw.githubusercontent.com/ChenHaoHere/PicGo/master/20200413093404.png" alt="" loading="lazy"></figure>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[keras改input_shape]]></title>
        <id>https://ChenHaoHere.github.io/post/keras-gai-input_shape/</id>
        <link href="https://ChenHaoHere.github.io/post/keras-gai-input_shape/">
        </link>
        <updated>2020-04-07T12:50:04.000Z</updated>
        <content type="html"><![CDATA[<p><strong>keras的model通常使用的时候是不需要特意把input_shape设置明白的，但今天用tf-lite部署到MCU上的时候，报错</strong></p>
<p><color:red>None is only supported in the 1st dimension.……………………<\p>
就是说只有1st dimentio(也就是batch_size)可以为None
<p>那就改呗<br>
结果model.input_size = (None, 128, 2)会报错说不给改。。<br>
然后google了一个解决方案，如下</p>
<pre><code class="language-python">from tensorflow.keras.layers import Input
from tensorflow.keras.models import Model

newInput = Input(shape=(128,2))
newOutputs = model(newInput)
newModel = Model(newInput,newOutputs)
newModel.set_weights(model.get_weights()) #可一定注意把weights换咯
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[dataframe无法赋值的一个大大大大大大坑]]></title>
        <id>https://ChenHaoHere.github.io/post/dataframe-wu-fa-fu-zhi-de-yi-ge-da-da-da-da-da-da-keng/</id>
        <link href="https://ChenHaoHere.github.io/post/dataframe-wu-fa-fu-zhi-de-yi-ge-da-da-da-da-da-da-keng/">
        </link>
        <updated>2020-04-06T10:03:18.000Z</updated>
        <content type="html"><![CDATA[<p>今天给df筛选出来的数据赋值的时候遇到赋值后没改变的情况，搞了好久终于搞明白了</p>
<h2 id="背景"><strong>背景：</strong></h2>
<blockquote>
<p>我的dataframe有一列是“记录序号”，是一列连续的整数</p>
</blockquote>
<blockquote>
<p>然后我按条件找到了我要改值的行的一系列整数，分别以start和last为上下界</p>
</blockquote>
<blockquote>
<p>我就把“记录序号”处于start和last之间的df取出来，再在取出来的里得到列名为&quot;容量&quot;的所有值</p>
</blockquote>
<blockquote>
<p>这些值我用同样长度的一维array赋值</p>
</blockquote>
<blockquote>
<p>可是赋值完，再打印出这些“记录序号”处于start和last之间的行，里面的值还是0</p>
</blockquote>
<h2 id="有问题的代码如下">有问题的代码如下：</h2>
<p><img src="https://raw.githubusercontent.com/ChenHaoHere/PicGo/master/%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20200406180722.png" alt="" loading="lazy"><br>
可以看到值被赋完后没有变</p>
<p>其实是因为<strong>df[:]返回的是个copy</strong>，所以当然没法改变原来的值<br>
验证如下：<br>
<img src="https://raw.githubusercontent.com/ChenHaoHere/PicGo/master/20200406181019.png" alt="" loading="lazy"><br>
两个id不一样</p>
<p>在stackoverflow发现一个可用的赋值方法</p>
<h2 id="修改后的代码如下">修改后的代码如下：</h2>
<figure data-type="image" tabindex="1"><img src="https://raw.githubusercontent.com/ChenHaoHere/PicGo/master/20200406181156.png" alt="" loading="lazy"></figure>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[tensorflow/core/framework/tensor_shape.cc:353] Check failed: 0 <= new_num_elements (0 vs. -5140274727941846278)]]></title>
        <id>https://ChenHaoHere.github.io/post/tensorflowithcoreframeworktensor_shapecc353-check-failed-0-less-new_num_elements-0-vs-5140274727941846278/</id>
        <link href="https://ChenHaoHere.github.io/post/tensorflowithcoreframeworktensor_shapecc353-check-failed-0-less-new_num_elements-0-vs-5140274727941846278/">
        </link>
        <updated>2020-04-06T06:35:02.000Z</updated>
        <content type="html"><![CDATA[<blockquote>
<p>用tf.data.Dataset.from_tensor_slices建数据集的时候，出现这个错误，然后jupyter 就restart kernel了...</p>
</blockquote>
<pre><code class="language-python">d_loader = tf.data.Dataset.from_tensor_slices((df.loc[:, [&quot;电流(A)&quot;, '电压(V)']].to_dict('list'), df.loc[:, '容量(Ah)']))
</code></pre>
<p>google出来也有不少人有这问题，<a href="https://github.com/tensorflow/tensorflow/issues/36266">tf的issue里</a>底下评论的说work的方法我都试了，但都<strong>不行</strong>（气死我了）<br>
最后还是屈服了，曲线救国，不用dataframe了</p>
<pre><code class="language-python">d_loader = tf.data.Dataset.from_tensor_slices((df.loc[:, [&quot;电流(A)&quot;, '电压(V)']].values, df.loc[:, '容量(Ah)'].values))
</code></pre>
]]></content>
    </entry>
</feed>