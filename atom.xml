<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://ChenHaoHere.github.io</id>
    <title>Blabla</title>
    <updated>2020-04-16T07:35:51.613Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://ChenHaoHere.github.io"/>
    <link rel="self" href="https://ChenHaoHere.github.io/atom.xml"/>
    <subtitle>我的Blog</subtitle>
    <logo>https://ChenHaoHere.github.io/images/avatar.png</logo>
    <icon>https://ChenHaoHere.github.io/favicon.ico</icon>
    <rights>All rights reserved 2020, Blabla</rights>
    <entry>
        <title type="html"><![CDATA[VScode路径中有非法字符]]></title>
        <id>https://ChenHaoHere.github.io/post/vscode-lu-jing-zhong-you-fei-fa-zi-fu/</id>
        <link href="https://ChenHaoHere.github.io/post/vscode-lu-jing-zhong-you-fei-fa-zi-fu/">
        </link>
        <updated>2020-04-16T07:33:24.000Z</updated>
        <content type="html"><![CDATA[<p>配置了好久vs code的C/C++环境，f5运行报错说launch.json路径中有非法字符<br>
然后把这个解释器路径改成绝对路径就好了</p>
<pre><code class="language-shell">        &quot;MIMode&quot;: &quot;gdb&quot;,
        &quot;miDebuggerPath&quot;: &quot;D:/MinGW64/mingw64/bin/gdb.exe&quot;
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[BAZEL .sh安装卸载]]></title>
        <id>https://ChenHaoHere.github.io/post/bazel-sh-an-zhuang-xie-zai/</id>
        <link href="https://ChenHaoHere.github.io/post/bazel-sh-an-zhuang-xie-zai/">
        </link>
        <updated>2020-04-15T05:48:51.000Z</updated>
        <content type="html"><![CDATA[<p>（https://github.com/bazelbuild/bazel/issues/838）</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[码云 clone 时认证失败]]></title>
        <id>https://ChenHaoHere.github.io/post/ma-yun-clone-shi-ren-zheng-shi-bai/</id>
        <link href="https://ChenHaoHere.github.io/post/ma-yun-clone-shi-ren-zheng-shi-bai/">
        </link>
        <updated>2020-04-15T02:10:48.000Z</updated>
        <content type="html"><![CDATA[<p>直接从github git clone一些大项目的时候太太太太太慢了，国内有一个叫码云的代码托管网站，<strong>速度贼快</strong><br>
但是第一次git clone的时候用户名/密码验证失败了<br>
才发现这个网站自己设置的用户名是不能用来验证的（不知道为啥要有这个），clone的时候username改成自己注册时的邮箱账号就行了</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Win的ubuntu子系统调用本机磁盘文件]]></title>
        <id>https://ChenHaoHere.github.io/post/win-de-ubuntu-zi-xi-tong-diao-yong-ben-ji-ci-pan-wen-jian/</id>
        <link href="https://ChenHaoHere.github.io/post/win-de-ubuntu-zi-xi-tong-diao-yong-ben-ji-ci-pan-wen-jian/">
        </link>
        <updated>2020-04-13T01:32:03.000Z</updated>
        <content type="html"><![CDATA[<blockquote>
<p>所有的Windows文件都被挂载到 Linux的 /mnt/ 下面的盘符 ，如C盘对应的是 /mnt/c 。</p>
</blockquote>
<figure data-type="image" tabindex="1"><img src="https://raw.githubusercontent.com/ChenHaoHere/PicGo/master/20200413093404.png" alt="" loading="lazy"></figure>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[keras改input_shape]]></title>
        <id>https://ChenHaoHere.github.io/post/keras-gai-input_shape/</id>
        <link href="https://ChenHaoHere.github.io/post/keras-gai-input_shape/">
        </link>
        <updated>2020-04-07T12:50:04.000Z</updated>
        <content type="html"><![CDATA[<p><strong>keras的model通常使用的时候是不需要特意把input_shape设置明白的，但今天用tf-lite部署到MCU上的时候，报错</strong></p>
<p><color:red>None is only supported in the 1st dimension.……………………<\p>
就是说只有1st dimentio(也就是batch_size)可以为None
<p>那就改呗<br>
结果model.input_size = (None, 128, 2)会报错说不给改。。<br>
然后google了一个解决方案，如下</p>
<pre><code class="language-python">from tensorflow.keras.layers import Input
from tensorflow.keras.models import Model

newInput = Input(shape=(128,2))
newOutputs = model(newInput)
newModel = Model(newInput,newOutputs)
newModel.set_weights(model.get_weights()) #可一定注意把weights换咯
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[dataframe无法赋值的一个大大大大大大坑]]></title>
        <id>https://ChenHaoHere.github.io/post/dataframe-wu-fa-fu-zhi-de-yi-ge-da-da-da-da-da-da-keng/</id>
        <link href="https://ChenHaoHere.github.io/post/dataframe-wu-fa-fu-zhi-de-yi-ge-da-da-da-da-da-da-keng/">
        </link>
        <updated>2020-04-06T10:03:18.000Z</updated>
        <content type="html"><![CDATA[<p>今天给df筛选出来的数据赋值的时候遇到赋值后没改变的情况，搞了好久终于搞明白了</p>
<h2 id="背景"><strong>背景：</strong></h2>
<blockquote>
<p>我的dataframe有一列是“记录序号”，是一列连续的整数</p>
</blockquote>
<blockquote>
<p>然后我按条件找到了我要改值的行的一系列整数，分别以start和last为上下界</p>
</blockquote>
<blockquote>
<p>我就把“记录序号”处于start和last之间的df取出来，再在取出来的里得到列名为&quot;容量&quot;的所有值</p>
</blockquote>
<blockquote>
<p>这些值我用同样长度的一维array赋值</p>
</blockquote>
<blockquote>
<p>可是赋值完，再打印出这些“记录序号”处于start和last之间的行，里面的值还是0</p>
</blockquote>
<h2 id="有问题的代码如下">有问题的代码如下：</h2>
<p><img src="https://raw.githubusercontent.com/ChenHaoHere/PicGo/master/%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20200406180722.png" alt="" loading="lazy"><br>
可以看到值被赋完后没有变</p>
<p>其实是因为<strong>df[:]返回的是个copy</strong>，所以当然没法改变原来的值<br>
验证如下：<br>
<img src="https://raw.githubusercontent.com/ChenHaoHere/PicGo/master/20200406181019.png" alt="" loading="lazy"><br>
两个id不一样</p>
<p>在stackoverflow发现一个可用的赋值方法</p>
<h2 id="修改后的代码如下">修改后的代码如下：</h2>
<figure data-type="image" tabindex="1"><img src="https://raw.githubusercontent.com/ChenHaoHere/PicGo/master/20200406181156.png" alt="" loading="lazy"></figure>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[tensorflow/core/framework/tensor_shape.cc:353] Check failed: 0 <= new_num_elements (0 vs. -5140274727941846278)]]></title>
        <id>https://ChenHaoHere.github.io/post/tensorflowithcoreframeworktensor_shapecc353-check-failed-0-less-new_num_elements-0-vs-5140274727941846278/</id>
        <link href="https://ChenHaoHere.github.io/post/tensorflowithcoreframeworktensor_shapecc353-check-failed-0-less-new_num_elements-0-vs-5140274727941846278/">
        </link>
        <updated>2020-04-06T06:35:02.000Z</updated>
        <content type="html"><![CDATA[<blockquote>
<p>用tf.data.Dataset.from_tensor_slices建数据集的时候，出现这个错误，然后jupyter 就restart kernel了...</p>
</blockquote>
<pre><code class="language-python">d_loader = tf.data.Dataset.from_tensor_slices((df.loc[:, [&quot;电流(A)&quot;, '电压(V)']].to_dict('list'), df.loc[:, '容量(Ah)']))
</code></pre>
<p>google出来也有不少人有这问题，<a href="https://github.com/tensorflow/tensorflow/issues/36266">tf的issue里</a>底下评论的说work的方法我都试了，但都<strong>不行</strong>（气死我了）<br>
最后还是屈服了，曲线救国，不用dataframe了</p>
<pre><code class="language-python">d_loader = tf.data.Dataset.from_tensor_slices((df.loc[:, [&quot;电流(A)&quot;, '电压(V)']].values, df.loc[:, '容量(Ah)'].values))
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[获得list的所有排序]]></title>
        <id>https://ChenHaoHere.github.io/post/huo-de-list-de-suo-you-pai-xu/</id>
        <link href="https://ChenHaoHere.github.io/post/huo-de-list-de-suo-you-pai-xu/">
        </link>
        <updated>2020-04-05T02:15:32.000Z</updated>
        <content type="html"><![CDATA[<blockquote>
<p>心血来潮想到这个东西，感觉不是很难，就着手实现了一下<br>
但发现不是那么简单（不是计算机系真的心累</p>
</blockquote>
<pre><code class="language-python">def all(s,ss=None):
    ss = [s]
    if len(s) == 2:
        ss.append(s[::-1])
        return ss
    else:
        for i in range((len(s)-1), -1, -1):
            item = s[i]
            temp = list(map(lambda x:x+[item], all(s[:i] + s[i+1:])))
            ss.extend(temp)
        return ss[1:]

s = [1, 2, 3, 4]
ss = all(s)
print(ss)
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[range逆序]]></title>
        <id>https://ChenHaoHere.github.io/post/range-ni-xu/</id>
        <link href="https://ChenHaoHere.github.io/post/range-ni-xu/">
        </link>
        <updated>2020-04-05T02:12:42.000Z</updated>
        <content type="html"><![CDATA[<pre><code class="language-python">#本意是想得到2，1，0
print(list(range(3, 0, -1))) #得到[2,, 1]
</code></pre>
<p>纪念一下自己的愚蠢</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[tqdm与enumerate搭配没有进度条]]></title>
        <id>https://ChenHaoHere.github.io/post/tqdm-yu-enumerate-da-pei-mei-you-jin-du-tiao/</id>
        <link href="https://ChenHaoHere.github.io/post/tqdm-yu-enumerate-da-pei-mei-you-jin-du-tiao/">
        </link>
        <updated>2020-04-03T09:11:01.000Z</updated>
        <content type="html"><![CDATA[<p>用pytorch训练模型时，torch.data.DataLoader生成载入数据集的类，在用enumerate能正常使用，但是套上tqdm就只有当前是第几个的输出，没有一个漂亮的进度条出来</p>
<p><strong>解决方法</strong></p>
<pre><code class="language-python">for batch_idx, batch in tqdm(enumerate(myDataLoader), total=len(myDataLoader)):
    pass
</code></pre>
<p>因为在自定义数据集的时候，已经定义了--len--方法，所以这样就可以了</p>
]]></content>
    </entry>
</feed>