<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://ChenHaoHere.github.io</id>
    <title>Blabla</title>
    <updated>2020-04-07T01:38:06.886Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://ChenHaoHere.github.io"/>
    <link rel="self" href="https://ChenHaoHere.github.io/atom.xml"/>
    <subtitle>我的Blog</subtitle>
    <logo>https://ChenHaoHere.github.io/images/avatar.png</logo>
    <icon>https://ChenHaoHere.github.io/favicon.ico</icon>
    <rights>All rights reserved 2020, Blabla</rights>
    <entry>
        <title type="html"><![CDATA[dataframe无法赋值的一个大大大大大大坑]]></title>
        <id>https://ChenHaoHere.github.io/post/dataframe-wu-fa-fu-zhi-de-yi-ge-da-da-da-da-da-da-keng/</id>
        <link href="https://ChenHaoHere.github.io/post/dataframe-wu-fa-fu-zhi-de-yi-ge-da-da-da-da-da-da-keng/">
        </link>
        <updated>2020-04-06T10:03:18.000Z</updated>
        <content type="html"><![CDATA[<p>今天给df筛选出来的数据赋值的时候遇到赋值后没改变的情况，搞了好久终于搞明白了</p>
<h2 id="背景"><strong>背景：</strong></h2>
<blockquote>
<p>我的dataframe有一列是“记录序号”，是一列连续的整数</p>
</blockquote>
<blockquote>
<p>然后我按条件找到了我要改值的行的一系列整数，分别以start和last为上下界</p>
</blockquote>
<blockquote>
<p>我就把“记录序号”处于start和last之间的df取出来，再在取出来的里得到列名为&quot;容量&quot;的所有值</p>
</blockquote>
<blockquote>
<p>这些值我用同样长度的一维array赋值</p>
</blockquote>
<blockquote>
<p>可是赋值完，再打印出这些“记录序号”处于start和last之间的行，里面的值还是0</p>
</blockquote>
<h2 id="有问题的代码如下">有问题的代码如下：</h2>
<p><img src="https://raw.githubusercontent.com/ChenHaoHere/PicGo/master/%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20200406180722.png" alt="" loading="lazy"><br>
可以看到值被赋完后没有变</p>
<p>其实是因为<strong>df[:]返回的是个copy</strong>，所以当然没法改变原来的值<br>
验证如下：<br>
<img src="https://raw.githubusercontent.com/ChenHaoHere/PicGo/master/20200406181019.png" alt="" loading="lazy"><br>
两个id不一样</p>
<p>在stackoverflow发现一个可用的赋值方法</p>
<h2 id="修改后的代码如下">修改后的代码如下：</h2>
<figure data-type="image" tabindex="1"><img src="https://raw.githubusercontent.com/ChenHaoHere/PicGo/master/20200406181156.png" alt="" loading="lazy"></figure>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[tensorflow/core/framework/tensor_shape.cc:353] Check failed: 0 <= new_num_elements (0 vs. -5140274727941846278)]]></title>
        <id>https://ChenHaoHere.github.io/post/tensorflowithcoreframeworktensor_shapecc353-check-failed-0-less-new_num_elements-0-vs-5140274727941846278/</id>
        <link href="https://ChenHaoHere.github.io/post/tensorflowithcoreframeworktensor_shapecc353-check-failed-0-less-new_num_elements-0-vs-5140274727941846278/">
        </link>
        <updated>2020-04-06T06:35:02.000Z</updated>
        <content type="html"><![CDATA[<blockquote>
<p>用tf.data.Dataset.from_tensor_slices建数据集的时候，出现这个错误，然后jupyter 就restart kernel了...</p>
</blockquote>
<pre><code class="language-python">d_loader = tf.data.Dataset.from_tensor_slices((df.loc[:, [&quot;电流(A)&quot;, '电压(V)']].to_dict('list'), df.loc[:, '容量(Ah)']))
</code></pre>
<p>google出来也有不少人有这问题，<a href="https://github.com/tensorflow/tensorflow/issues/36266">tf的issue里</a>底下评论的说work的方法我都试了，但都<strong>不行</strong>（气死我了）<br>
最后还是屈服了，曲线救国，不用dataframe了</p>
<pre><code class="language-python">d_loader = tf.data.Dataset.from_tensor_slices((df.loc[:, [&quot;电流(A)&quot;, '电压(V)']].values, df.loc[:, '容量(Ah)'].values))
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[获得list的所有排序]]></title>
        <id>https://ChenHaoHere.github.io/post/huo-de-list-de-suo-you-pai-xu/</id>
        <link href="https://ChenHaoHere.github.io/post/huo-de-list-de-suo-you-pai-xu/">
        </link>
        <updated>2020-04-05T02:15:32.000Z</updated>
        <content type="html"><![CDATA[<blockquote>
<p>心血来潮想到这个东西，感觉不是很难，就着手实现了一下<br>
但发现不是那么简单（不是计算机系真的心累</p>
</blockquote>
<pre><code class="language-python">def all(s,ss=None):
    ss = [s]
    if len(s) == 2:
        ss.append(s[::-1])
        return ss
    else:
        for i in range((len(s)-1), -1, -1):
            item = s[i]
            temp = list(map(lambda x:x+[item], all(s[:i] + s[i+1:])))
            ss.extend(temp)
        return ss[1:]

s = [1, 2, 3, 4]
ss = all(s)
print(ss)
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[range逆序]]></title>
        <id>https://ChenHaoHere.github.io/post/range-ni-xu/</id>
        <link href="https://ChenHaoHere.github.io/post/range-ni-xu/">
        </link>
        <updated>2020-04-05T02:12:42.000Z</updated>
        <content type="html"><![CDATA[<pre><code class="language-python">#本意是想得到2，1，0
print(list(range(3, 0, -1))) #得到[2,, 1]
</code></pre>
<p>纪念一下自己的愚蠢</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[tqdm与enumerate搭配没有进度条]]></title>
        <id>https://ChenHaoHere.github.io/post/tqdm-yu-enumerate-da-pei-mei-you-jin-du-tiao/</id>
        <link href="https://ChenHaoHere.github.io/post/tqdm-yu-enumerate-da-pei-mei-you-jin-du-tiao/">
        </link>
        <updated>2020-04-03T09:11:01.000Z</updated>
        <content type="html"><![CDATA[<p>用pytorch训练模型时，torch.data.DataLoader生成载入数据集的类，在用enumerate能正常使用，但是套上tqdm就只有当前是第几个的输出，没有一个漂亮的进度条出来</p>
<p><strong>解决方法</strong></p>
<pre><code class="language-python">for batch_idx, batch in tqdm(enumerate(myDataLoader), total=len(myDataLoader)):
    pass
</code></pre>
<p>因为在自定义数据集的时候，已经定义了--len--方法，所以这样就可以了</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[python获得北京时间时间戳并格式化输出]]></title>
        <id>https://ChenHaoHere.github.io/post/python-huo-de-bei-jing-shi-jian-shi-jian-chuo-bing-ge-shi-hua-shu-chu/</id>
        <link href="https://ChenHaoHere.github.io/post/python-huo-de-bei-jing-shi-jian-shi-jian-chuo-bing-ge-shi-hua-shu-chu/">
        </link>
        <updated>2020-04-03T02:51:53.000Z</updated>
        <content type="html"><![CDATA[<pre><code class="language-python">import datetime

timenow = (datetime.datetime.utcnow() + datetime.timedelta(hours=8)) #将utc时间转化为本地时间
timetext = timenow.strftime('%Y-%m-%d %H:%M:%S')
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[存储单元换算]]></title>
        <id>https://ChenHaoHere.github.io/post/cun-chu-dan-yuan-huan-suan/</id>
        <link href="https://ChenHaoHere.github.io/post/cun-chu-dan-yuan-huan-suan/">
        </link>
        <updated>2020-04-02T00:53:33.000Z</updated>
        <content type="html"><![CDATA[<p>计算机存储信息的最小单位，称之为位（bit，又称比特）<br>
存储器中所包含存储单元的数量称为存储容量，其计量基本单位是字节（Byte。简称B），8个二进制位称为1个字节，此外还有KB、MB、GB、TB等，它们之间的换算关系是1Byte＝8bit，1KB=1024B，1MB=1024KB，1GB=1024MB，1TB=1024GB。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[添加conda env到jupyter lab/notebook]]></title>
        <id>https://ChenHaoHere.github.io/post/tian-jia-conda-env-dao-jupyter-labnotebook/</id>
        <link href="https://ChenHaoHere.github.io/post/tian-jia-conda-env-dao-jupyter-labnotebook/">
        </link>
        <updated>2020-04-01T01:49:54.000Z</updated>
        <content type="html"><![CDATA[<pre><code class="language-shell"> conda activate cenv
(cenv)$ conda install ipykernel
(cenv)$ ipython kernel install --user --name=&lt;any_name_for_kernel&gt;
(cenv($ conda deactivate
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[ windows10 磁贴]]></title>
        <id>https://ChenHaoHere.github.io/post/windows10-ci-tie/</id>
        <link href="https://ChenHaoHere.github.io/post/windows10-ci-tie/">
        </link>
        <updated>2020-03-31T07:27:39.000Z</updated>
        <content type="html"><![CDATA[<!-- more -->
<blockquote>
<p>辛苦了大半个下午，终于把自己的win10变好看了</p>
<p>主要是在磁贴上花了大功夫</p>
<p>最后桌面是空的了，常用的在任务栏和开始菜单</p>
</blockquote>
<figure data-type="image" tabindex="1"><img src="C:%5CUsers%5CChenHao%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20200331152709598.png" alt="image-20200331152709598" loading="lazy"></figure>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[划分数据集train_test_split]]></title>
        <id>https://ChenHaoHere.github.io/post/hua-fen-shu-ju-ji/</id>
        <link href="https://ChenHaoHere.github.io/post/hua-fen-shu-ju-ji/">
        </link>
        <updated>2020-03-30T08:52:27.000Z</updated>
        <content type="html"><![CDATA[<p>老是忘，放着随时取用</p>
<pre><code class="language-python">from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test = train_test_split(df,test_size=0.2, random_state=0)
</code></pre>
]]></content>
    </entry>
</feed>