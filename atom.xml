<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://ChenHaoHere.github.io</id>
    <title>Blabla</title>
    <updated>2021-09-27T12:49:34.576Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://ChenHaoHere.github.io"/>
    <link rel="self" href="https://ChenHaoHere.github.io/atom.xml"/>
    <subtitle>我的Blog</subtitle>
    <logo>https://ChenHaoHere.github.io/images/avatar.png</logo>
    <icon>https://ChenHaoHere.github.io/favicon.ico</icon>
    <rights>All rights reserved 2021, Blabla</rights>
    <entry>
        <title type="html"><![CDATA[线性代数中英文对照表（update anytime）]]></title>
        <id>https://ChenHaoHere.github.io/post/xian-xing-dai-shu-zhong-ying-wen-dui-zhao-biao-update-anytime/</id>
        <link href="https://ChenHaoHere.github.io/post/xian-xing-dai-shu-zhong-ying-wen-dui-zhao-biao-update-anytime/">
        </link>
        <updated>2021-09-16T06:29:51.000Z</updated>
        <content type="html"><![CDATA[<ol>
<li>normal vector 法向量</li>
<li>obtuse angle 钝角</li>
<li>right angle 直角</li>
<li>acute angle 锐角</li>
<li>polyhedra(sometimes polytope) 多面体</li>
<li>orthant 象限</li>
<li>simplex 单纯形</li>
<li>tetrahedron 四面体</li>
<li>Cartesian Product</li>
</ol>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[尊重差异、平等权利、自由选择]]></title>
        <id>https://ChenHaoHere.github.io/post/zun-chong-chai-yi-ping-deng-quan-li-zi-you-xuan-ze/</id>
        <link href="https://ChenHaoHere.github.io/post/zun-chong-chai-yi-ping-deng-quan-li-zi-you-xuan-ze/">
        </link>
        <updated>2021-07-11T00:37:18.000Z</updated>
        <content type="html"><![CDATA[<p>尊重差异、平等权利、自由选择</p>
<p>肌肉、性心理疾病、航空动物</p>
<p>职场歧视</p>
<p>俄罗斯男性职业</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[傻言傻语]]></title>
        <id>https://ChenHaoHere.github.io/post/sha-yan-sha-yu/</id>
        <link href="https://ChenHaoHere.github.io/post/sha-yan-sha-yu/">
        </link>
        <updated>2021-04-29T06:33:39.000Z</updated>
        <content type="html"><![CDATA[<p>‍我和你在森林中遇上一只吃人的老虎，我没必要跑赢老虎，而只要跑赢你，就可以活下来，这就是内卷。从招行数据来看，07年0.9%的人拥有55%的总财富，到20年2%不到的人占据了82%的财富（西南财大的基尼系数也印证了这一数据），先富带动后富已然完成了一半，同时分配不均导致社会阶级固化，而社会阶级固化又会加重分配不均。这两大老虎在后面追着，我们这种平头老百姓完全没有实力和手段去抵抗、去对付，从老虎爪子下得不到粮食，只能跑赢其他的平头老百姓，所以996，所以不敢生孩子，所以老师布置了100分的作业，你知道一定会有人按110分做，而有人一定做到120分，你又知道有人也会按110分做，你又做到120分，有人又会做到130分，于是100分的作业，不做到150分不算合格，做到200分才有资格争取这一学分。<br>
这是最好的时代，1840年鸦片战争以来，中国没有像现在这样强大过，国际事件不老是弃权了，各种场合也敢放声回怼了，军事实力也越来越强了，可是，我作为时代的一粒微尘，光是努力不被社会的浪潮消解已经用尽了全力，何谈其他呢，这是最坏的时代啊...</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[python的多线程能不用则不用]]></title>
        <id>https://ChenHaoHere.github.io/post/python-de-duo-xian-cheng-neng-bu-yong-ze-bu-yong/</id>
        <link href="https://ChenHaoHere.github.io/post/python-de-duo-xian-cheng-neng-bu-yong-ze-bu-yong/">
        </link>
        <updated>2021-04-14T13:49:44.000Z</updated>
        <content type="html"><![CDATA[<h1 id="我在跑程序的时候所有随机种子都设置的好好的结果每次跑的结果都不一样我调了无数天都不知道问题出在哪结果是python多线程threading的问题-线程池有一个贼恶心的bug就是他不完全遍历你敢相信">我在跑程序的时候，所有随机种子都设置的好好的，结果每次跑的结果都不一样，我调了无数天都不知道问题出在哪，结果是python多线程（threading）的问题。线程池有一个贼恶心的bug就是，他不完全遍历！！你敢相信！！！</h1>
<pre><code class="language-python">pool.map(lambda x:x.save(), self.nodes)
</code></pre>
<h1 id="看上去好像没什么问题但是这一句执行完之后我发现总有一些nodes没有运行没有save每次漏的还不一样所以程序总是不可复现">看上去好像没什么问题，但是这一句执行完之后，我发现总有一些nodes没有运行！！！没有save！！！每次漏的还不一样，所以程序总是不可复现！</h1>
<h1 id="最关键的是之前跑的数据全部不能用了">最关键的是，之前跑的数据全部不能用了</h1>
<h1 id="我吐了啊啊啊啊啊啊啊啊啊啊">我吐了啊啊啊啊啊啊啊啊啊啊</h1>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[线代名词解释二：det adj]]></title>
        <id>https://ChenHaoHere.github.io/post/xian-dai-ming-ci-jie-shi-yi-det-adj/</id>
        <link href="https://ChenHaoHere.github.io/post/xian-dai-ming-ci-jie-shi-yi-det-adj/">
        </link>
        <updated>2021-03-29T23:37:35.000Z</updated>
        <content type="html"><![CDATA[<h1 id="deta">det(A)</h1>
<p>矩阵A的determiner行列式 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>d</mi><mi>e</mi><mi>t</mi><mo>(</mo><mi>A</mi><mo>)</mo><mo>=</mo><mi mathvariant="normal">∣</mi><mi>A</mi><mi mathvariant="normal">∣</mi></mrow><annotation encoding="application/x-tex">det(A)=|A|</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">d</span><span class="mord mathdefault">e</span><span class="mord mathdefault">t</span><span class="mopen">(</span><span class="mord mathdefault">A</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∣</span><span class="mord mathdefault">A</span><span class="mord">∣</span></span></span></span><br>
<a href="https://baike.baidu.com/item/%E8%A1%8C%E5%88%97%E5%BC%8F/2010180?fr=aladdin">百度百科：行列式</a></p>
<h1 id="adja">adj(A)</h1>
<p>矩阵A的adjoint matrix伴随矩阵<br>
<a href="https://baike.baidu.com/item/adj/22411079?fr=aladdin">百度百科：adj</a></p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[线代名词解释一：canonical vector]]></title>
        <id>https://ChenHaoHere.github.io/post/xian-dai-ming-ci-jie-shi-yi-canonical-vector/</id>
        <link href="https://ChenHaoHere.github.io/post/xian-dai-ming-ci-jie-shi-yi-canonical-vector/">
        </link>
        <updated>2021-03-20T00:22:56.000Z</updated>
        <content type="html"><![CDATA[<blockquote>
<p>因为学线代学的是中文，所以读文献的时候遇到英文词汇，有的可能是其实认识只是认不出来，在此整理一下</p>
</blockquote>
<h1 id="canonical-vector">canonical vector</h1>
<p>规范向量，也叫standard basis vector，标准正交基中的一个向量，个人理解就是单位向量</p>
<hr>
<p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>e</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">e_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">e</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> is a vector with a <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>1</mn></mrow><annotation encoding="application/x-tex">1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span> in the <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathdefault">i</span></span></span></span>th entry（为啥要用entry这个词，我迷糊了好久...） and <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>0</mn></mrow><annotation encoding="application/x-tex">0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span>s elsewhere</p>
<hr>
<p><a href="https://en.wikipedia.org/wiki/Standard_basis">wikipedia: Standard basis</a></p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[MR第一周组会：Modular Robot（2020~）]]></title>
        <id>https://ChenHaoHere.github.io/post/modular-robot2020~/</id>
        <link href="https://ChenHaoHere.github.io/post/modular-robot2020~/">
        </link>
        <updated>2020-10-13T05:47:26.000Z</updated>
        <content type="html"><![CDATA[<ol>
<li><a href="https://www.sciencedirect.com/science/article/pii/S0921889019303379">Roombots extended: Challenges in the next generation of self-reconfigurable modular robots and their application in adaptive and assistive furniture</a></li>
</ol>
<p>家具的辅助场景</p>
<p>一开始有关于MR的survey性质的介绍，然后是他自己的家具应用的特定场景 完成的工作是人为遥控的</p>
<ol start="2">
<li><a href="https://www.emerald.com/insight/content/doi/10.1108/WJE-02-2019-0032/full/html">Quantum genetic algorithm to evolve controllers for self-reconfigurable modular robots</a></li>
</ol>
<p>量子遗传算法</p>
<ol start="3">
<li><a href="https://ieeexplore.ieee.org/abstract/document/9158382">Kubits: Solid-State Self-Reconfiguration With Programmable Magnets</a></li>
</ol>
<p>可编程磁体，能达到1000个模块</p>
<ol start="4">
<li><a href="https://link.springer.com/chapter/10.1007/978-3-030-28619-4_65">Configuration Recognition with Distributed Information for Modular Robots</a></li>
</ol>
<p>很多个模块自动变形、配置的算法 新的MR表示法和多项式时间复杂度下解决匹配和映射</p>
<p>This paper presents a new representation of modular robot configurations and a polynomial time algorithm for configuration recognition which can finish matching and mapping problem simultaneously.</p>
<ol start="5">
<li><a href="https://www.frontiersin.org/articles/10.3389/frobt.2020.00044/full?&amp;utm_source=Email_to_authors_&amp;utm_medium=Email&amp;utm_content=T1_11.5e1_author&amp;utm_campaign=Email_publication&amp;field=&amp;journalName=Frontiers_in_Robotics_and_AI&amp;id=511523">Scalable and Robust Fabrication, Operation, and Control of Compliant Modular Robots</a></li>
</ol>
<p>硬件设计 二维的 用不上 但是其中思想也许可以借鉴</p>
<p>很轻</p>
<ol start="6">
<li><a href="https://arxiv.org/pdf/2006.11071.pdf">Distributed prediction of unsafe reconfiguration scenarios of modular-robotic Programmable Matter</a></li>
</ol>
<p>重构时稳不稳</p>
<ol start="7">
<li><a href="http://bluebox.ippt.pan.pl/~jleng/doc/iros20subm.pdf">Autonomous model-based assessment of mechanical failures of reconfigurable modular robots with a Conjugate Gradient solver</a></li>
</ol>
<p>故障检测算法</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[python获得所有包]]></title>
        <id>https://ChenHaoHere.github.io/post/python-huo-de-suo-you-bao/</id>
        <link href="https://ChenHaoHere.github.io/post/python-huo-de-suo-you-bao/">
        </link>
        <updated>2020-08-12T03:30:00.000Z</updated>
        <content type="html"><![CDATA[<pre><code class="language-python">help('modules')
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[tensorflow画networks的图]]></title>
        <id>https://ChenHaoHere.github.io/post/tensorflow-hua-networks-de-tu/</id>
        <link href="https://ChenHaoHere.github.io/post/tensorflow-hua-networks-de-tu/">
        </link>
        <updated>2020-05-13T08:44:42.000Z</updated>
        <content type="html"><![CDATA[<pre><code class="language-python">tf.keras.utils.plot_model(model, 'my_model.png', show_shapes=True)
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[tensorflow custom RNN]]></title>
        <id>https://ChenHaoHere.github.io/post/tensorflow-coustom-rnn/</id>
        <link href="https://ChenHaoHere.github.io/post/tensorflow-coustom-rnn/">
        </link>
        <updated>2020-05-13T05:57:19.000Z</updated>
        <content type="html"><![CDATA[<blockquote>
<p>model.fit()是非常强大的工具，但是自己自定义网络的时候就没法用，但其实tf.keras提供了很好的<strong>tf.keras.layers.layer</strong>和<strong>tf.keras.models.Model</strong>使用，通过继承子类的方式也能用上fit</p>
<p><strong>但是</strong>，RNN不能这么用，因为RNN还有hiddenstate要搞，直接这么用，会报各种错，反正我吃了血亏了...</p>
<p>tf.keras提供了RNNCell（我用的keras.layers.AbstractRNNCell，还有GRUcell，LSTMcell，都可以用）来继承编写</p>
</blockquote>
<h2 id="代码奉上">代码奉上</h2>
<pre><code class="language-python">class myGRU(keras.layers.AbstractRNNCell):
    def __init__(self, units, **kwargs):
        self.units = units
        super(myGRU, self).__init__(**kwargs)

    @property
    def state_size(self):
        return self.units

    def build(self, input_shape):
        self.dim = input_shape[-1]

        self.w_r = self.add_weight(shape=[self.dim+self.units, self.units], initializer='uniform', name='reset_gate', trainable=True)
        self.b_r = self.add_weight(shape=[self.units], initializer='zeros', name='reset gate bias', trainable=True)

        self.w_z = self.add_weight(shape=[self.dim+self.units, self.units], initializer='uniform', name='update_gate', trainable=True)
        self.b_z = self.add_weight(shape=[self.units], initializer='zeros', name='update gate bias', trainable=True) 

        self.w_n = self.add_weight(shape=[self.dim+self.units, self.units], initializer='uniform', name='intetim', trainable=True)
        self.b_n = self.add_weight(shape=[self.units], initializer='zeros', name='intetim gate bias', trainable=True)

        self.built = True

    def call(self, inputs, states):
        prev_output = states[0]

        r = tf.nn.sigmoid(inputs @ self.w_r[:self.dim] + prev_output @ self.w_r[self.dim:] + self.b_r)
        z = tf.nn.sigmoid(inputs @ self.w_z[:self.dim] + prev_output @ self.w_z[self.dim:] + self.b_z)
        n = tf.nn.tanh(inputs @ self.w_r[:self.dim] + prev_output @ (r * self.w_r[self.dim:]) + self.b_n)
        
        output = (1 - z) * prev_output + z * n

        return output, output

class GRUReg(keras.models.Model):
    def __init__(self, units, **kwargs):
        super(GRUReg, self).__init__(**kwargs)
        self.gru = keras.layers.RNN(myGRU(units))
        self.dense = keras.layers.Dense(1)
    
    def call(self, inputs):
        x = self.gru(inputs)
        x = self.dense(x)
        return x
model = GRUReg(32)
model.compile(optimizer=keras.optimizers.RMSprop(), loss='mae', metrics=['mae'])
model.fit(tf.ones((3, 128, 2)), tf.zeros(3), epochs=5, batch_size=1)
</code></pre>
]]></content>
    </entry>
</feed>